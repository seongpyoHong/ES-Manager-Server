apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "elasticsearch.name" . }}-data-warm
  labels:
    instance: "elasticsearch-manager"
    component: elasticsearch
    role: data
spec:
  replicas: {{ .Values.elasticsearch.warm.replicaCount }}
  serviceName: {{ include "elasticsearch.name" . }}-data
  selector:
    matchLabels:
      instance: "elasticsearch-manager"
      component: elasticsearch
      role: data
  template:
    metadata:
      labels:
        instance: "elasticsearch-manager"
        component: elasticsearch
        role: data
    spec:
      nodeSelector:
       cloud.google.com/gke-nodepool: hdd-node-pool
      containers:
      - name: {{ include "elasticsearch.name" . }}-data-warm
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: "{{ .Values.elasticsearch.image.repository}}:{{ .Values.elasticsearch.image.tag }}"
        args:
        - /run.sh
        - -Enode.attr.box_type=warm
        resources:
{{ toYaml .Values.elasticsearch.warm.resources | indent 10 }}
        readinessProbe:
          tcpSocket:
            port: 9300
          timeoutSeconds: 60
          successThreshold: 1

        imagePullPolicy: Always
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-cluster-name
        - name: NODE_MASTER
          value: 'false'
        - name: NODE_DATA
          value: 'true'
        - name: NODE_INGEST
          value: 'true'
        - name: HTTP_ENABLE
          value: 'false'
        - name: ES_JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-warm-java-opts
        - name: ES_CLIENT_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-client-endpoint
        - name: ES_PERSISTENT
          valueFrom:
            configMapKeyRef:
              name: es-env
              key: es-persistent-storage
        ports:
        - name: transport
          containerPort: 9300
          protocol: TCP
        # Random hostPort to prevent multiple ES data instances on one node
        - name: dummy
          containerPort: 28651
          protocol: TCP
          hostPort: 28651
        volumeMounts:
        - name: data
          mountPath: /data
        - name: es-config
          mountPath: /elasticsearch/conf

      terminationGracePeriodSeconds: 30

      volumes:
      - name: es-config
        configMap:
          name: es-config

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: hdd
        resources:
          requests:
            storage: {{ .Values.elasticsearch.warm.storage }}