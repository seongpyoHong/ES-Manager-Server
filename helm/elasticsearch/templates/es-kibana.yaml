apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    instance: "elasticsearch-manager"
    component: kibana
spec:
  type: LoadBalancer
  ports:
  - port: 5601
    protocol: TCP
    targetPort: 5601
  selector:
    instance: "elasticsearch-manager"
    component: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    instance: "elasticsearch-manager"
    component: kibana
spec:
  selector:
    matchLabels:
      instance: "elasticsearch-manager"
      component: kibana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        instance: "elasticsearch-manager"
        component: kibana
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: default-node-pool
      containers:
      - name: kibana
        image: "{{ .Values.kibana.image.repository}}:{{ .Values.kibana.image.tag}}"
        #image: docker.elastic.co/kibana/kibana:5.2.2
        imagePullPolicy: {{ .Values.kibana.image.pullPolicy}}
        readinessProbe:
          httpGet:
            path: /
            port: 5601
          timeoutSeconds: 1
          successThreshold: 1
        env:
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              configMapKeyRef:
                name: es-env
                key: es-client-endpoint
          - name: SERVER_HOST
            value: "0.0.0.0"
          # - name: SERVER_BASEPATH
          #   value: "/kibana"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
